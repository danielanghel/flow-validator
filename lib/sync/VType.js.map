{"version":3,"sources":["../../src/sync/VType.js"],"names":["VType","name","validate","refinement","rf","VRefinedType","parse","v","err","ValidationError","expected","got","description","e","value","error","t2","AsyncVType","Type","InstanceOfType","c","class","ClassOfType","VArrayOfType","t","itemType","VIntersectionType","a","b","typeA","typeB","VUnionType","LiteralType","VOptionalType","innerType","VMappingType","keys","values","VObjectType","schema","VObjectExactType","VTupleType","base","f"],"mappings":"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","file":"VType.js","sourcesContent":["// @flow\n\nimport { ValidationError } from \"./ValidationError\";\nimport { Type } from \"./Type\";\nimport { AsyncVType } from \"../async/AsyncVType\";\nimport { Vintersection } from \"./Vintersection\";\nimport { Vunion } from \"./Vunion\";\nimport { Voptional } from \"./Voptional\";\nimport { syncFunctionToAsync } from \"../async/syncFunctionToAsync\";\n\nexport class VType<T> extends Type<T> {\n  validate: (value: mixed) => T;\n  constructor(name: string, validate: (value: mixed) => T) {\n    super(name, validate);\n    this.validate = validate;\n  }\n  Vrefine(\n    refinement: (v: T, error: (err: string) => ValidationError) => T\n  ): VRefinedType<T> {\n    const rf = new VRefinedType(this, v =>\n      refinement(\n        this.parse(v),\n        (err: string) =>\n          new ValidationError({ expected: rf, got: v, description: err })\n      )\n    );\n    return rf;\n  }\n  isValid(v: mixed): boolean {\n    try {\n      this.validate(v);\n      return true;\n    } catch (e) {\n      if (e instanceof ValidationError) return false;\n      throw e;\n    }\n  }\n  validateResult(v: mixed): { value: T } | { error: ValidationError } {\n    try {\n      return { value: this.validate(v) };\n    } catch (e) {\n      if (e instanceof ValidationError) return { error: e };\n      throw e;\n    }\n  }\n  Vand<T2>(t2: VType<T2>): VIntersectionType<T, T2> {\n    return Vintersection(this, t2);\n  }\n  Vor<T2>(t2: VType<T2>): VUnionType<T, T2> {\n    return Vunion(this, t2);\n  }\n  Voptional(): VOptionalType<T> {\n    return Voptional(this);\n  }\n  Vasync(): AsyncVType<T> {\n    return new AsyncVType(this.name, syncFunctionToAsync(this.validate));\n  }\n}\n\nexport class InstanceOfType<T> extends VType<T> {\n  class: Class<T>;\n  constructor(c: Class<T>, validate: (value: mixed) => T) {\n    super(\"instanceof\", validate);\n    this.class = c;\n  }\n}\n\nexport class ClassOfType<T> extends VType<T> {\n  class: T;\n  constructor(c: T, validate: (value: mixed) => T) {\n    super(\"classOf\", validate);\n    this.class = c;\n  }\n}\n\nexport class VArrayOfType<T> extends VType<Array<T>> {\n  itemType: VType<T>;\n  constructor(t: VType<T>, validate: (value: mixed) => Array<T>) {\n    super(\"arrayOf\", validate);\n    this.itemType = t;\n  }\n}\n\nexport class VIntersectionType<A, B> extends VType<A & B> {\n  typeA: VType<A>;\n  typeB: VType<B>;\n  constructor(a: VType<A>, b: VType<B>, validate: (value: mixed) => A & B) {\n    super(\"intersection\", validate);\n    this.typeA = a;\n    this.typeB = b;\n  }\n}\n\nexport class VUnionType<A, B> extends VType<A | B> {\n  typeA: VType<A>;\n  typeB: VType<B>;\n  constructor(a: VType<A>, b: VType<B>, validate: (value: mixed) => A | B) {\n    super(\"union\", validate);\n    this.typeA = a;\n    this.typeB = b;\n  }\n}\n\nexport class LiteralType<T> extends VType<T> {\n  value: T;\n  constructor(t: T, validate: (value: mixed) => T) {\n    super(\"literal\", validate);\n    this.value = t;\n  }\n}\n\nexport class VOptionalType<T> extends VType<?T> {\n  innerType: VType<T>;\n  constructor(t: VType<T>, validate: (value: mixed) => ?T) {\n    super(\"optional\", validate);\n    this.innerType = t;\n  }\n}\n\nexport class VMappingType<K, V> extends VType<{ [key: K]: V }> {\n  keys: VType<K>;\n  values: VType<V>;\n  constructor(\n    keys: VType<K>,\n    values: VType<V>,\n    validate: (value: mixed) => { [key: K]: V }\n  ) {\n    super(\"mapping\", validate);\n    this.keys = keys;\n    this.values = values;\n  }\n}\n\nexport class VObjectType<\n  S: { [key: string]: VType<any> },\n  T: $ObjMap<S, <F>(v: VType<F>) => F>\n> extends VType<T> {\n  schema: S;\n  constructor(schema: S, validate: (value: mixed) => T) {\n    super(\"object\", validate);\n    this.schema = schema;\n  }\n}\n\nexport class VObjectExactType<\n  S: { [key: string]: VType<any> },\n  T: $ObjMap<S, <F>(v: VType<F>) => F>\n> extends VType<T> {\n  schema: S;\n  constructor(schema: S, validate: (value: mixed) => T) {\n    super(\"objectExact\", validate);\n    this.schema = schema;\n  }\n}\n\nexport class VTupleType<T> extends VType<T> {\n  schema: Array<VType<any>>;\n  constructor(schema: Array<VType<any>>, validate: (value: mixed) => T) {\n    super(\"tuple\", validate);\n    this.schema = schema;\n  }\n}\n\nexport class VRefinedType<T> extends VType<T> {\n  base: VType<T>;\n  constructor(base: VType<T>, f: (v: mixed) => T) {\n    super(\"refined\", f);\n    this.base = base;\n  }\n  revalidate(): VType<T> {\n    return new VType(\"revalidated\", v => this.base.validate(this.validate(v)));\n  }\n}\n"]}