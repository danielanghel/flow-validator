{"version":3,"sources":["../../src/sync/returns.js"],"names":["returns","Vreturns","t","args","ret","f","apply","parse","validate"],"mappings":";;;;;QA6BgBA,O,GAAAA,O;QAiCAC,Q,GAAAA,Q;;AA3DhB;;AACA;;AAHA;;AA4BO,SAASD,OAAT,CACLE,CADK,EAEoD;AACzD,SAAO;AAAA,WACL,YAAkB;AAAA,wCAANC,IAAM;AAANA,YAAM;AAAA;;AAChB,UAAMC,MAAMC,EAAEC,KAAF,CAAQ,IAAR,EAAcH,IAAd,CAAZ;AACA,aAAOD,EAAEK,KAAF,CAAQH,GAAR,CAAP;AACD,KAJI;AAAA,GAAP;AAKD;;AAyBM,SAASH,QAAT,CACLC,CADK,EAEoD;AACzD,SAAO;AAAA,WACL,YAAkB;AAAA,yCAANC,IAAM;AAANA,YAAM;AAAA;;AAChB,UAAMC,MAAMC,EAAEC,KAAF,CAAQ,IAAR,EAAcH,IAAd,CAAZ;AACA,aAAOD,EAAEM,QAAF,CAAWJ,GAAX,CAAP;AACD,KAJI;AAAA,GAAP;AAKD","file":"returns.js","sourcesContent":["// @flow\n/* eslint-disable no-redeclare */\n\nimport { Type } from \"./Type\";\nimport { VType } from \"./VType\";\n\ndeclare function returns<P, P2, P3, P4, P5, P6, R>(\n  t: Type<R>\n): (\n  f: (p: P, p2: P2, p3: P3, p4: P4, p5: P5, p6: P6) => R\n) => (p: P, p2: P2, p3: P3, p4: P4, p5: P5, p6: P6) => R;\ndeclare function returns<P, P2, P3, P4, P5, R>(\n  t: Type<R>\n): (\n  f: (p: P, p2: P2, p3: P3, p4: P4, p5: P5) => R\n) => (p: P, p2: P2, p3: P3, p4: P4, p5: P5) => R;\ndeclare function returns<P, P2, P3, P4, R>(\n  t: Type<R>\n): (\n  f: (p: P, p2: P2, p3: P3, p4: P4) => R\n) => (p: P, p2: P2, p3: P3, p4: P4) => R;\ndeclare function returns<P, P2, P3, R>(\n  t: Type<R>\n): (f: (p: P, p2: P2, p3: P3) => R) => (p: P, p2: P2, p3: P3) => R;\ndeclare function returns<P, P2, R>(\n  t: Type<R>\n): (f: (p: P, p2: P2) => R) => (p: P, p2: P2) => R;\ndeclare function returns<P, R>(t: Type<R>): (f: (p: P) => R) => (p: P) => R;\n\nexport function returns<R>(\n  t: Type<R>\n): (f: (...p: Array<any>) => R) => (...p: Array<any>) => R {\n  return f =>\n    function(...args) {\n      const ret = f.apply(this, args);\n      return t.parse(ret);\n    };\n}\n\ndeclare function Vreturns<P, P2, P3, P4, P5, P6, R>(\n  t: VType<R>\n): (\n  f: (p: P, p2: P2, p3: P3, p4: P4, p5: P5, p6: P6) => R\n) => (p: P, p2: P2, p3: P3, p4: P4, p5: P5, p6: P6) => R;\ndeclare function Vreturns<P, P2, P3, P4, P5, R>(\n  t: VType<R>\n): (\n  f: (p: P, p2: P2, p3: P3, p4: P4, p5: P5) => R\n) => (p: P, p2: P2, p3: P3, p4: P4, p5: P5) => R;\ndeclare function Vreturns<P, P2, P3, P4, R>(\n  t: VType<R>\n): (\n  f: (p: P, p2: P2, p3: P3, p4: P4) => R\n) => (p: P, p2: P2, p3: P3, p4: P4) => R;\ndeclare function Vreturns<P, P2, P3, R>(\n  t: VType<R>\n): (f: (p: P, p2: P2, p3: P3) => R) => (p: P, p2: P2, p3: P3) => R;\ndeclare function Vreturns<P, P2, R>(\n  t: VType<R>\n): (f: (p: P, p2: P2) => R) => (p: P, p2: P2) => R;\ndeclare function Vreturns<P, R>(t: VType<R>): (f: (p: P) => R) => (p: P) => R;\n\nexport function Vreturns<R>(\n  t: VType<R>\n): (f: (...p: Array<any>) => R) => (...p: Array<any>) => R {\n  return f =>\n    function(...args) {\n      const ret = f.apply(this, args);\n      return t.validate(ret);\n    };\n}\n"]}