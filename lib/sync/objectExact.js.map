{"version":3,"sources":["../../src/sync/objectExact.js"],"names":["objectExact","s","oes","ObjectExactType","o","objectType","validate","v","keys","result","errors","key","hasOwnProperty","ValidationError","expected","noProperty","got","parse","e","length"],"mappings":";;;;;;;;;;;;;;;;;;QAMgBA,W,GAAAA,W;;AAJhB;;AACA;;AACA;;;;AAEO,SAASA,WAAT,CACLC,CADK,EAEyD;AAC9D,MAAMC,MAAM,IAAIC,qBAAJ,CAAoBF,CAApB,EAAuB,aAAK;AACtC,QAAMG,IAAIC,iBAAWC,QAAX,CAAoBC,CAApB,CAAV;AACA,QAAMC,OAAO,oBAAYJ,CAAZ,CAAb;AACA,QAAMK,SAAS,EAAf;AACA,QAAMC,SAAS,EAAf;AAJsC;AAAA;AAAA;;AAAA;AAKtC,sDAAkBF,IAAlB,4GAAwB;AAAA,YAAbG,IAAa;;AACtB,YAAI,CAACV,EAAEW,cAAF,CAAiBD,IAAjB,CAAL,EAA4B;AAC1BD,iBAAOC,IAAP,IAAc,IAAIE,gCAAJ,CAAoB;AAChCC,sBAAUC,gBADsB;AAEhCC,iBAAKZ,EAAEO,IAAF;AAF2B,WAApB,CAAd;AAID,SALD,MAME,IAAI;AACFF,iBAAOE,IAAP,IAAcV,EAAEU,IAAF,EAAOM,KAAP,CAAab,EAAEO,IAAF,CAAb,CAAd;AACD,SAFD,CAEE,OAAOO,CAAP,EAAU;AACV,cAAIA,aAAaL,gCAAjB,EAAkCH,OAAOC,IAAP,IAAcO,CAAd,CAAlC,KACK,MAAMA,CAAN;AACN;AACJ;AAlBqC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAmBtC,QAAI,mCAA2BR,MAA3B,EAAmCS,MAAvC,EACE,MAAM,IAAIN,gCAAJ,CAAoB,EAAEC,UAAUZ,GAAZ,EAAiBc,KAAKZ,CAAtB,EAAyBM,cAAzB,EAApB,CAAN;AACF,WAAQD,MAAR;AACD,GAtBW,CAAZ;AAuBA,SAAOP,GAAP;AACD","file":"objectExact.js","sourcesContent":["// @flow\n\nimport { ValidationError } from \"./ValidationError\";\nimport { Type, ObjectExactType } from \"./Type\";\nimport { objectType, noProperty } from \"./base\";\n\nexport function objectExact<S: { [key: string]: Type<any> }>(\n  s: S\n): ObjectExactType<S, $Exact<$ObjMap<S, <F>(v: Type<F>) => F>>> {\n  const oes = new ObjectExactType(s, v => {\n    const o = objectType.validate(v);\n    const keys = Object.keys(o);\n    const result = {};\n    const errors = {};\n    for (const key of keys) {\n      if (!s.hasOwnProperty(key)) {\n        errors[key] = new ValidationError({\n          expected: noProperty,\n          got: o[key]\n        });\n      } else\n        try {\n          result[key] = s[key].parse(o[key]);\n        } catch (e) {\n          if (e instanceof ValidationError) errors[key] = e;\n          else throw e;\n        }\n    }\n    if (Object.getOwnPropertyNames(errors).length)\n      throw new ValidationError({ expected: oes, got: o, errors });\n    return (result: any);\n  });\n  return oes;\n}\n"]}