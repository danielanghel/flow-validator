{"version":3,"sources":["../../src/async/asyncTakes.js"],"names":["asyncTakes","asyncVtakes","AsyncTypes","paramsValidator","params","f","parse","apply","validate"],"mappings":";;;;;;;;;;;;;;QAmDgBA,U,GAAAA,U;QAuDAC,W,GAAAA,W;;AAxGhB;;AACA;;AACA;;;;AA4CsD;;AAEtD;;;AA5CA;;AAuCsE;AAM/D,SAASD,UAAT,GAImC;AAAA,oCAHrCE,UAGqC;AAHrCA,cAGqC;AAAA;;AACxC,MAAMC,kBAAkB,4BAAYD,UAAZ,CAAxB;AACA,SAAO;AAAA,oFACL;AAAA,yCAAkBE,MAAlB;AAAkBA,cAAlB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,4BACSC,CADT;AAAA,4BACiB,IADjB;AAAA;AAAA,qBAC6BF,gBAAgBG,KAAhB,CAAsBF,MAAtB,CAD7B;;AAAA;AAAA;AAAA,2DACWG,KADX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADK;AAAA,GAAP;AAID,C,CAuCqE;;;AAGhB;;AAEtD;AACO,SAASN,WAAT,GAImC;AAAA,qCAHrCC,UAGqC;AAHrCA,cAGqC;AAAA;;AACxC,MAAMC,kBAAkB,6BAAaD,UAAb,CAAxB;AACA,SAAO;AAAA,oFACL;AAAA,yCAAkBE,MAAlB;AAAkBA,cAAlB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,6BACSC,CADT;AAAA,6BACiB,IADjB;AAAA;AAAA,qBAC6BF,gBAAgBK,QAAhB,CAAyBJ,MAAzB,CAD7B;;AAAA;AAAA;AAAA,6DACWG,KADX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADK;AAAA,GAAP;AAID","file":"asyncTakes.js","sourcesContent":["// @flow\n\nimport { AsyncType } from \"./AsyncType\";\nimport { AsyncVType } from \"./AsyncVType\";\nimport { asyncTuple, asyncVtuple } from \"./asyncTuple\";\n\n/* eslint-disable no-redeclare */\n\ndeclare function asyncTakes<P, P2, P3, P4, P5, P6, R>(\n  t: AsyncType<P>,\n  t2: AsyncType<P2>,\n  t3: AsyncType<P3>,\n  t4: AsyncType<P4>,\n  t5: AsyncType<P5>,\n  t6: AsyncType<P6> // eslint-disable-line no-redeclare\n): (\n  f: (p: P, p2: P2, p3: P3, p4: P4, p5: P5, p6: P6) => Promise<R>\n) => (p: P, p2: P2, p3: P3, p4: P4, p5: P5, p6: P6) => Promise<R>;\ndeclare function asyncTakes<P, P2, P3, P4, P5, R>(\n  t: AsyncType<P>,\n  t2: AsyncType<P2>,\n  t3: AsyncType<P3>,\n  t4: AsyncType<P4>,\n  t5: AsyncType<P5> // eslint-disable-line no-redeclare\n): (\n  f: (p: P, p2: P2, p3: P3, p4: P4, p5: P5) => Promise<R>\n) => (p: P, p2: P2, p3: P3, p4: P4, p5: P5) => Promise<R>;\ndeclare function asyncTakes<P, P2, P3, P4, R>(\n  t: AsyncType<P>,\n  t2: AsyncType<P2>,\n  t3: AsyncType<P3>,\n  t4: AsyncType<P4> // eslint-disable-line no-redeclare\n): (\n  f: (p: P, p2: P2, p3: P3, p4: P4) => Promise<R>\n) => (p: P, p2: P2, p3: P3, p4: P4) => Promise<R>;\ndeclare function asyncTakes<P, P2, P3, R>(\n  t: AsyncType<P>,\n  t2: AsyncType<P2>,\n  t3: AsyncType<P3> // eslint-disable-line no-redeclare\n): (\n  f: (p: P, p2: P2, p3: P3) => Promise<R>\n) => (p: P, p2: P2, p3: P3) => Promise<R>;\ndeclare function asyncTakes<P, P2, R>(\n  t: AsyncType<P>,\n  t2: AsyncType<P2>\n): (f: (p: P, p2: P2) => Promise<R>) => (p: P, p2: P2) => Promise<R>; // eslint-disable-line no-redeclare\ndeclare function asyncTakes<P, R>(\n  t: AsyncType<P>\n): (f: (p: P) => Promise<R>) => (p: P) => Promise<R>; // eslint-disable-line no-redeclare\n\n// eslint-disable-next-line no-redeclare\nexport function asyncTakes<R>(\n  ...AsyncTypes: Array<AsyncType<any>>\n): (\n  f: (...props: Array<any>) => Promise<R>\n) => (...props: Array<any>) => Promise<R> {\n  const paramsValidator = asyncTuple((AsyncTypes: any));\n  return f =>\n    async function(...params) {\n      return f.apply(this, await paramsValidator.parse(params));\n    };\n}\n\ndeclare function asyncVtakes<P, P2, P3, P4, P5, P6, R>(\n  t: AsyncVType<P>,\n  t2: AsyncVType<P2>,\n  t3: AsyncVType<P3>,\n  t4: AsyncVType<P4>,\n  t5: AsyncVType<P5>,\n  t6: AsyncVType<P6> // eslint-disable-line no-redeclare\n): (\n  f: (p: P, p2: P2, p3: P3, p4: P4, p5: P5, p6: P6) => Promise<R>\n) => (p: P, p2: P2, p3: P3, p4: P4, p5: P5, p6: P6) => Promise<R>;\ndeclare function asyncVtakes<P, P2, P3, P4, P5, R>(\n  t: AsyncVType<P>,\n  t2: AsyncVType<P2>,\n  t3: AsyncVType<P3>,\n  t4: AsyncVType<P4>,\n  t5: AsyncVType<P5> // eslint-disable-line no-redeclare\n): (\n  f: (p: P, p2: P2, p3: P3, p4: P4, p5: P5) => Promise<R>\n) => (p: P, p2: P2, p3: P3, p4: P4, p5: P5) => Promise<R>;\ndeclare function asyncVtakes<P, P2, P3, P4, R>(\n  t: AsyncVType<P>,\n  t2: AsyncVType<P2>,\n  t3: AsyncVType<P3>,\n  t4: AsyncVType<P4> // eslint-disable-line no-redeclare\n): (\n  f: (p: P, p2: P2, p3: P3, p4: P4) => Promise<R>\n) => (p: P, p2: P2, p3: P3, p4: P4) => Promise<R>;\ndeclare function asyncVtakes<P, P2, P3, R>(\n  t: AsyncVType<P>,\n  t2: AsyncVType<P2>,\n  t3: AsyncVType<P3> // eslint-disable-line no-redeclare\n): (\n  f: (p: P, p2: P2, p3: P3) => Promise<R>\n) => (p: P, p2: P2, p3: P3) => Promise<R>;\ndeclare function asyncVtakes<P, P2, R>(\n  t: AsyncVType<P>,\n  t2: AsyncVType<P2>\n): (f: (p: P, p2: P2) => Promise<R>) => (p: P, p2: P2) => Promise<R>; // eslint-disable-line no-redeclare\ndeclare function asyncVtakes<P, R>(\n  t: AsyncVType<P>\n): (f: (p: P) => Promise<R>) => (p: P) => Promise<R>; // eslint-disable-line no-redeclare\n\n// eslint-disable-next-line no-redeclare\nexport function asyncVtakes<R>(\n  ...AsyncTypes: Array<AsyncVType<any>>\n): (\n  f: (...props: Array<any>) => Promise<R>\n) => (...props: Array<any>) => Promise<R> {\n  const paramsValidator = asyncVtuple((AsyncTypes: any));\n  return f =>\n    async function(...params) {\n      return f.apply(this, await paramsValidator.validate(params));\n    };\n}\n"]}