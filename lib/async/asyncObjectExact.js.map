{"version":3,"sources":["../../src/async/asyncObjectExact.js"],"names":["asyncObjectExact","AsyncObjectExactType","schema","parse","AsyncType","s","oes","v","objectType","o","validate","keys","result","errors","all","map","key","hasOwnProperty","ValidationError","expected","noProperty","got","length"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QAiBgBA,gB,GAAAA,gB;;AAfhB;;AACA;;AACA;;;;IAEaC,oB,WAAAA,oB;;;AAKX,gCAAYC,MAAZ,EAAuBC,KAAvB,EAA4D;AAAA;;AAAA,kKACpD,aADoD,EACrCA,KADqC;;AAE1D,UAAKD,MAAL,GAAcA,MAAd;AAF0D;AAG3D;;;EALOE,qB;;AAQH,SAASJ,gBAAT,CACLK,CADK,EAEmE;AAAA;;AACxE,MAAMC,MAAM,IAAIL,oBAAJ,CAAyBI,CAAzB;AAAA,wFAA4B,kBAAME,CAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAC5BC,gBAD4B;AAAA;AAAA,qBACFD,CADE;;AAAA;AAAA;AAChCE,eADgC,gBACjBC,QADiB;AAEhCC,kBAFgC,GAEzB,oBAAYF,CAAZ,CAFyB;AAGhCG,oBAHgC,GAGyB,EAHzB;AAIhCC,oBAJgC,GAIvB,EAJuB;AAAA;AAAA,qBAKhC,kBAAQC,GAAR,CACJH,KAAKI,GAAL;AAAA,qGAAS,iBAAMC,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA,8BACFX,EAAEY,cAAF,CAAiBD,GAAjB,CADE;AAAA;AAAA;AAAA;;AAELH,iCAAOG,GAAP,IAAc,IAAIE,gCAAJ,CAAoB;AAChCC,sCAAUC,gBADsB;AAEhCC,iCAAKZ,EAAEO,GAAF;AAF2B,2BAApB,CAAd;AAFK;AAAA;;AAAA;AAAA;AAAA;AAAA,iCAQiBX,EAAEW,GAAF,EAAOb,KAAP,CAAaM,EAAEO,GAAF,CAAb,CARjB;;AAAA;AAQHJ,iCAAOI,GAAP,CARG;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA,gCAUC,uBAAaE,gCAVd;AAAA;AAAA;AAAA;;AAU+BL,iCAAOG,GAAP;AAV/B;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAT;;AAAA;AAAA;AAAA;AAAA,kBADI,CALgC;;AAAA;AAAA,mBAqBlC,mCAA2BH,MAA3B,EAAmCS,MArBD;AAAA;AAAA;AAAA;;AAAA,6BAsB1BJ,gCAtB0B;AAAA,6BAsBEZ,GAtBF;AAAA;AAAA,qBAsBkBG,CAtBlB;;AAAA;AAAA;AAAA,6BAsBqBI,MAtBrB;AAAA;AAsBRM,wBAtBQ;AAsBOE,mBAtBP;AAsBqBR,sBAtBrB;AAAA;AAAA;;AAAA;AAAA,gDAuB/BD,MAvB+B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA5B;;AAAA;AAAA;AAAA;AAAA,MAAZ;AAyBA,SAAON,GAAP;AACD","file":"asyncObjectExact.js","sourcesContent":["// @flow\n\nimport { ValidationError } from \"../sync/ValidationError\";\nimport { AsyncType } from \"./AsyncType\";\nimport { objectType, noProperty } from \"../sync/base\";\n\nexport class AsyncObjectExactType<\n  S: { [key: string]: AsyncType<any> },\n  T: $ObjMap<S, <F>(v: AsyncType<F>) => F>\n> extends AsyncType<T> {\n  schema: S;\n  constructor(schema: S, parse: (value: mixed) => Promise<T>) {\n    super(\"objectExact\", parse);\n    this.schema = schema;\n  }\n}\n\nexport function asyncObjectExact<S: { [key: string]: AsyncType<any> }>(\n  s: S\n): AsyncObjectExactType<S, $Exact<$ObjMap<S, <F>(v: AsyncType<F>) => F>>> {\n  const oes = new AsyncObjectExactType(s, async v => {\n    const o = objectType.validate(await v);\n    const keys = Object.keys(o);\n    const result: $Exact<$ObjMap<S, <F>(v: AsyncType<F>) => F>> = ({}: any);\n    const errors = {};\n    await Promise.all(\n      keys.map(async key => {\n        if (!s.hasOwnProperty(key)) {\n          errors[key] = new ValidationError({\n            expected: noProperty,\n            got: o[key]\n          });\n        } else\n          try {\n            result[key] = await s[key].parse(o[key]);\n          } catch (e) {\n            if (e instanceof ValidationError) errors[key] = e;\n            else throw e;\n          }\n      })\n    );\n    if (Object.getOwnPropertyNames(errors).length)\n      throw new ValidationError({ expected: oes, got: await o, errors });\n    return result;\n  });\n  return oes;\n}\n"]}