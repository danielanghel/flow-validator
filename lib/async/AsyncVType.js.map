{"version":3,"sources":["../../src/async/AsyncVType.js"],"names":["AsyncVType","name","validate","refinement","rf","AsyncVRefinedType","v","vResolved","parse","err","ValidationError","expected","got","description","t2","AsyncType","AsyncVOptionalType","t","innerType","AsyncVUnionType","a","b","typeA","typeB","AsyncVIntersectionType","base","f"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA;;AACA;;AACA;;AACA;;AACA;;;;IAEaA,U,WAAAA,U;;;AAEX,sBAAYC,IAAZ,EAA0BC,QAA1B,EAAkE;AAAA;;AAAA,8IAC1DD,IAD0D,EACpDC,QADoD;;AAEhE,UAAKA,QAAL,GAAgBA,QAAhB;AAFgE;AAGjE;;;;4BAECC,U,EACsB;AAAA;;AACtB,UAAMC,KAAK,IAAIC,iBAAJ,CAAsB,IAAtB;AAAA,4FAA4B,iBAAMC,CAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBACbA,CADa;;AAAA;AAC/BC,2BAD+B;AAAA,gCAE9BJ,UAF8B;AAAA;AAAA,yBAG7B,OAAKK,KAAL,CAAWF,CAAX,CAH6B;;AAAA;AAAA;;AAAA,gCAInC,UAACG,GAAD;AAAA,2BACE,IAAIC,gCAAJ,CAAoB;AAClBC,gCAAUP,EADQ;AAElBQ,2BAAKL,SAFa;AAGlBM,mCAAaJ;AAHK,qBAApB,CADF;AAAA,mBAJmC;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA5B;;AAAA;AAAA;AAAA;AAAA,UAAX;AAYA,aAAOL,EAAP;AACD;;;yBACQU,E,EAAmD;AAC1D,aAAO,4CAAmB,IAAnB,EAAyBA,EAAzB,CAAP;AACD;;;wBACOA,E,EAA4C;AAClD,aAAO,8BAAY,IAAZ,EAAkBA,EAAlB,CAAP;AACD;;;gCACkC;AACjC,aAAO,oCAAe,IAAf,CAAP;AACD;;;EA/BgCC,qB;;IAkCtBC,kB,WAAAA,kB;;;AAEX,8BAAYC,CAAZ,EAA8Bf,QAA9B,EAAuE;AAAA;;AAAA,+JAC/D,UAD+D,EACnDA,QADmD;;AAErE,WAAKgB,SAAL,GAAiBD,CAAjB;AAFqE;AAGtE;;;EALwCjB,U;;IAQ9BmB,e,WAAAA,e;;;AAGX,2BACEC,CADF,EAEEC,CAFF,EAGEnB,QAHF,EAIE;AAAA;;AAAA,yJACM,OADN,EACeA,QADf;;AAEA,WAAKoB,KAAL,GAAaF,CAAb;AACA,WAAKG,KAAL,GAAaF,CAAb;AAHA;AAID;;;EAXwCrB,U;;IAc9BwB,sB,WAAAA,sB;;;AAGX,kCACEJ,CADF,EAEEC,CAFF,EAGEnB,QAHF,EAIE;AAAA;;AAAA,uKACM,cADN,EACsBA,QADtB;;AAEA,WAAKoB,KAAL,GAAaF,CAAb;AACA,WAAKG,KAAL,GAAaF,CAAb;AAHA;AAID;;;EAX+CrB,U;;IAcrCK,iB,WAAAA,iB;;;AAEX,6BAAYoB,IAAZ,EAAiCC,CAAjC,EAA8D;AAAA;;AAAA,6JACtD,SADsD,EAC3CA,CAD2C;;AAE5D,WAAKD,IAAL,GAAYA,IAAZ;AAF4D;AAG7D;;;;iCAC2B;AAAA;;AAC1B,aAAO,IAAIzB,UAAJ,CAAe,aAAf;AAAA,6FAA8B,kBAAMM,CAAN;AAAA;AAAA;AAAA;AAAA;AAAA,iCACnC,OAAKmB,IAD8B;AAAA;AAAA,yBACV,OAAKvB,QAAL,CAAcI,CAAd,CADU;;AAAA;AAAA;AAAA,iEACzBJ,QADyB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA9B;;AAAA;AAAA;AAAA;AAAA,UAAP;AAGD;;;EAVuCF,U","file":"AsyncVType.js","sourcesContent":["// @flow\n\nimport { ValidationError } from \"../sync/ValidationError\";\nimport { AsyncType } from \"./AsyncType\";\nimport { asyncVintersection } from \"./asyncVintersection\";\nimport { asyncVunion } from \"./asyncVunion\";\nimport { asyncVoptional } from \"./asyncVoptional\";\n\nexport class AsyncVType<T> extends AsyncType<T> {\n  validate: (value: mixed) => Promise<T>;\n  constructor(name: string, validate: (value: mixed) => Promise<T>) {\n    super(name, validate);\n    this.validate = validate;\n  }\n  Vrefine(\n    refinement: (v: T, error: (e: string) => ValidationError) => Promise<T>\n  ): AsyncVRefinedType<T> {\n    const rf = new AsyncVRefinedType(this, async v => {\n      const vResolved = await v;\n      return refinement(\n        await this.parse(v),\n        (err: string) =>\n          new ValidationError({\n            expected: rf,\n            got: vResolved,\n            description: err\n          })\n      );\n    });\n    return rf;\n  }\n  Vand<T2>(t2: AsyncVType<T2>): AsyncVIntersectionType<T, T2> {\n    return asyncVintersection(this, t2);\n  }\n  Vor<T2>(t2: AsyncVType<T2>): AsyncVUnionType<T, T2> {\n    return asyncVunion(this, t2);\n  }\n  Voptional(): AsyncVOptionalType<T> {\n    return asyncVoptional(this);\n  }\n}\n\nexport class AsyncVOptionalType<T> extends AsyncVType<?T> {\n  innerType: AsyncVType<T>;\n  constructor(t: AsyncVType<T>, validate: (value: mixed) => Promise<?T>) {\n    super(\"optional\", validate);\n    this.innerType = t;\n  }\n}\n\nexport class AsyncVUnionType<A, B> extends AsyncVType<A | B> {\n  typeA: AsyncVType<A>;\n  typeB: AsyncVType<B>;\n  constructor(\n    a: AsyncVType<A>,\n    b: AsyncVType<B>,\n    validate: (value: mixed) => Promise<A | B>\n  ) {\n    super(\"union\", validate);\n    this.typeA = a;\n    this.typeB = b;\n  }\n}\n\nexport class AsyncVIntersectionType<A, B> extends AsyncVType<A & B> {\n  typeA: AsyncVType<A>;\n  typeB: AsyncVType<B>;\n  constructor(\n    a: AsyncVType<A>,\n    b: AsyncVType<B>,\n    validate: (value: mixed) => Promise<A & B>\n  ) {\n    super(\"intersection\", validate);\n    this.typeA = a;\n    this.typeB = b;\n  }\n}\n\nexport class AsyncVRefinedType<T> extends AsyncVType<T> {\n  base: AsyncVType<T>;\n  constructor(base: AsyncVType<T>, f: (v: mixed) => Promise<T>) {\n    super(\"refined\", f);\n    this.base = base;\n  }\n  revalidate(): AsyncVType<T> {\n    return new AsyncVType(\"revalidated\", async v =>\n      this.base.validate(await this.validate(v))\n    );\n  }\n}\n"]}