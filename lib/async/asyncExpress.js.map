{"version":3,"sources":["../../src/async/asyncExpress.js"],"names":["middleware","validator","fun","req","res","next","parse","then","data","requestMapping","endpoint","asyncExpress"],"mappings":";;;;;;;AAEA;;AAGA,SAASA,UAAT,CACEC,SADF,EAEEC,GAFF,EAGc;AACZ,SAAO,UAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX;AAAA,WACLJ,UAAUK,KAAV,CAAgBH,GAAhB,EAAqBI,IAArB,CAA0B;AAAA,aAAQL,IAAIM,IAAJ,EAAUJ,GAAV,EAAeC,IAAf,CAAR;AAAA,KAA1B,EAAwDA,IAAxD,CADK;AAAA,GAAP;AAED;;AAED,SAASI,cAAT,CACER,SADF,EAEEC,GAFF,EAGc;AACZ,SAAO,UAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX;AAAA,WACLJ,UAAUK,KAAV,CAAgBH,GAAhB,EAAqBI,IAArB,CAA0B;AAAA,aAAQL,IAAIM,IAAJ,EAAUJ,GAAV,CAAR;AAAA,KAA1B,EAAkD;AAAA,aAAMC,MAAN;AAAA,KAAlD,CADK;AAAA,GAAP;AAED;;AAED,SAASK,QAAT,CACET,SADF,EAEEC,GAFF,EAGc;AACZ,SAAO,UAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX;AAAA,WACLJ,UAAUK,KAAV,CAAgBH,GAAhB,EAAqBI,IAArB,CAA0B;AAAA,aAAQL,IAAIM,IAAJ,EAAUJ,GAAV,CAAR;AAAA,KAA1B,EAAkDC,IAAlD,CADK;AAAA,GAAP;AAED;;AAEM,IAAMM,sCAAe,EAAED,kBAAF,EAAYV,sBAAZ,EAAwBS,8BAAxB,EAArB","file":"asyncExpress.js","sourcesContent":["// @flow\n\nimport { AsyncType } from \"./AsyncType\";\nimport type { Middleware, $Response, NextFunction } from \"express\";\n\nfunction middleware<T>(\n  validator: AsyncType<T>,\n  fun: (req: T, res: $Response, next: NextFunction) => mixed\n): Middleware {\n  return (req, res, next) =>\n    validator.parse(req).then(data => fun(data, res, next), next);\n}\n\nfunction requestMapping<T>(\n  validator: AsyncType<T>,\n  fun: (req: T, res: $Response) => mixed\n): Middleware {\n  return (req, res, next) =>\n    validator.parse(req).then(data => fun(data, res), () => next());\n}\n\nfunction endpoint<T>(\n  validator: AsyncType<T>,\n  fun: (req: T, res: $Response) => mixed\n): Middleware {\n  return (req, res, next) =>\n    validator.parse(req).then(data => fun(data, res), next);\n}\n\nexport const asyncExpress = { endpoint, middleware, requestMapping };\n"]}